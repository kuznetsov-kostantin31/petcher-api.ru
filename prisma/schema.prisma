generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enums
enum State {
  waiting
  refusal
  adoption
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  login        String         @unique
  email        String         @unique
  password     String
  description  String?
  url          String?
  banned       Boolean        @default(false)
  banReason    String?
  Projects     Project[]
  User_skill   User_skill[]
  Response     Response[]
  Favorites    Favorites[]
  Project_user Project_user[]
  User_role    User_role[]
}

model Role {
  id        Int         @id @default(autoincrement())
  name      String
  skills    Skill[]
  User_role User_role[]
}

model Platform {
  id               Int                @id @default(autoincrement())
  name             String
  Project_platform Project_platform[]
}

model Skill {
  id         Int          @id @default(autoincrement())
  name       String
  roleId     Int
  role       Role         @relation(fields: [roleId], references: [id])
  User_skill User_skill[]
}

model Project {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?
  comment          String?
  teamleadId       Int
  user             User               @relation(fields: [teamleadId], references: [id])
  Response         Response[]
  Favorites        Favorites[]
  Project_user     Project_user[]
  Project_platform Project_platform[]
}

model User_skill {
  id      Int   @id @default(autoincrement())
  skillId Int
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  skill   Skill @relation(fields: [skillId], references: [id])
}

model Response {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    Int
  state     State
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Favorites {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Project_user {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Project_platform {
  id         Int      @id @default(autoincrement())
  projectId  Int
  platformId Int
  project    Project  @relation(fields: [projectId], references: [id])
  platform   Platform @relation(fields: [platformId], references: [id])
}

model User_role {
  id     Int  @id @default(autoincrement())
  roleId Int
  userId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
}
